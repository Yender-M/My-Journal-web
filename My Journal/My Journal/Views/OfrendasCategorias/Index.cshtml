@model IEnumerable<My_Journal.Models.OfrendaCategoria.OfrendasCategoria>

@{
    ViewData["Title"] = "Ofrendas Categorias";
}
<link href="/theme-assets/css/index_style.css" rel="stylesheet" />

<style>
    .label {
        display: inline-flex;
        align-items: center;
        cursor: pointer;
        color: #394a56;
    }

    .label-text {
        margin-left: 16px;
        font-weight: 600;
        transition: color 0.3s ease;
    }

    .toggle {
        isolation: isolate;
        position: relative;
        height: 30px;
        width: 60px;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: -8px -4px 8px 0px #ffffff, 8px 4px 12px 0px #d1d9e6, 4px 4px 4px 0px #d1d9e6 inset, -4px -4px 4px 0px #ffffff inset;
    }

    .toggle-state {
        display: none;
    }

    .indicator {
        height: 100%;
        width: 200%;
        background: #ecf0f3;
        border-radius: 15px;
        transform: translate3d(-75%, 0, 0);
        transition: transform 0.4s cubic-bezier(0.85, 0.05, 0.18, 1.35), background-color 0.3s ease;
        box-shadow: -8px -4px 8px 0px #ffffff, 8px 4px 12px 0px #d1d9e6;
    }

    .toggle-state:checked ~ .indicator {
        transform: translate3d(25%, 0, 0);
        background-color: #006400;
    }
</style>

<a asp-controller="OfrendasCategoriasCreate" asp-action="Index" class="btn btn-lg btn-primary box-shadow--4dp">Crear registro</a>
<br />

<div class="container" style="margin-top:30px;">
    <table id="example" class="table table-striped table-bordered" style="width:100%">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Nombre)</th>
                <th>@Html.DisplayNameFor(model => model.Descripcion)</th>
                <th>@Html.DisplayNameFor(model => model.Estado)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
                    <td>@Html.DisplayFor(modelItem => item.Descripcion)</td>
                    <td>
                        @if (item.Estado == 0)
                        {
                            <span>Inactivo</span>
                        }
                        else
                        {
                            <span>Activo</span>
                        }
                    </td>
                    <td>
                        <a class="btn launch btnEditar"
                           data-toggle="modal"
                           data-target="#modalEditarCategoria"
                           data-id="@item.IdCatOfrenda"
                           data-nombre="@item.Nombre"
                           data-descripcion="@item.Descripcion"
                           data-estado="@item.Estado">
                            <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- MODAL DE EDICIÓN PARA OFRENDAS CATEGORIAS -->
<div class="modal fade" id="modalEditarCategoria" tabindex="-1" aria-labelledby="modalCategoriaLabel" aria-hidden="true">
    <div class="modal-dialog" style="max-width: 600px; width: 90vw;">
        <div class="modal-content">
            <form asp-action="Edit" method="post" class="form" id="formEditarCategoria">
                <div class="modal-header">
                    <h5 class="modal-title">Editar - <span id="modalCategoriaNombre"></span></h5>
                    <button type="button" class="btn-close" data-dismiss="modal"></button>
                </div>
                <div class="modal-body">

                    <input type="hidden" id="EditIdCatOfrenda" name="IdCatOfrenda" />

                    <div class="form-group">
                        <label>Nombre</label>
                        <input id="EditNombre" name="Nombre" class="form-control" />
                    </div>
                    <div class="form-group mt-3">
                        <label>Descripción</label>
                        <input id="EditDescripcion" name="Descripcion" class="form-control" />
                    </div>

                    <!-- TOGGLE DE ESTADO PARA OFRENDAS CATEGORIAS -->
                    <label class="label mt-3">
                        <div class="toggle">
                            <input class="toggle-state" id="estadoCheckCat" name="Estado" type="checkbox" />
                            <div class="indicator"></div>
                        </div>
                        <div class="label-text" id="estadoLabelCat">No activo</div>
                    </label>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Guardar</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="/theme-assets/js/Datatable.js"></script>
    <script>
        const estadoCheckCat = document.getElementById("estadoCheckCat");
        const estadoLabelCat = document.getElementById("estadoLabelCat");
        const toggleContainerCat = document.querySelector('#modalEditarCategoria .toggle');

        // Al hacer clic en editar
        $(document).on('click', '.btnEditar', function () {
            var btn = $(this);
            $("#EditIdCatOfrenda").val(btn.data("id"));
            $("#EditNombre").val(btn.data("nombre"));
            $("#EditDescripcion").val(btn.data("descripcion"));
            $("#modalCategoriaNombre").text(btn.data("nombre"));

            var estado = btn.data("estado");
            const isActive = estado === true || estado === "True" || estado === "true" || estado == 1;

            $("#estadoCheckCat").prop("checked", isActive);

            if (isActive) {
                estadoLabelCat.textContent = "Activo";
                estadoLabelCat.style.color = "#006400"; // Verde
            } else {
                estadoLabelCat.textContent = "No activo";
                estadoLabelCat.style.color = "#394a56"; // Gris estándar
                toggleContainerCat.style.backgroundColor = "#ecf0f3"; // Fondo estándar
            }
        });

        // Al cambiar el estado del checkbox
        estadoCheckCat.addEventListener("change", function () {
            if (estadoCheckCat.checked) {
                estadoLabelCat.textContent = "Activo";
                estadoLabelCat.style.color = "#006400"; // Verde
            } else {
                estadoLabelCat.textContent = "No activo";
                estadoLabelCat.style.color = "#394a56"; // Gris estándar
                toggleContainerCat.style.backgroundColor = "#ecf0f3"; // Fondo estándar
            }
        });
    </script>
}
