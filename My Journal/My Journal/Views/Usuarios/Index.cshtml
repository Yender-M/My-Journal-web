@model IEnumerable<My_Journal.Models.Usuario.Usuario>

@{
    ViewData["Title"] = "Usuarios";
}
<link href="/theme-assets/css/index_style.css" rel="stylesheet" />

<style>
    /* ==========================
           ESTILOS GENERALES (no cambiar)
           ========================== */
    .label {
        display: inline-flex;
        align-items: center;
        cursor: pointer;
        color: #394a56;
    }

    .label-text {
        margin-left: 16px;
        font-weight: 600;
        transition: color 0.3s ease;
    }

    .toggle {
        isolation: isolate;
        position: relative;
        height: 30px;
        width: 60px;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: -8px -4px 8px 0px #ffffff, 8px 4px 12px 0px #d1d9e6, 4px 4px 4px 0px #d1d9e6 inset, -4px -4px 4px 0px #ffffff inset;
    }

    .toggle-state {
        display: none;
    }

    .indicator {
        height: 100%;
        width: 200%;
        background: #ecf0f3;
        border-radius: 15px;
        transform: translate3d(-75%, 0, 0);
        transition: transform 0.4s cubic-bezier(0.85, 0.05, 0.18, 1.35), background-color 0.3s ease;
        box-shadow: -8px -4px 8px 0px #ffffff, 8px 4px 12px 0px #d1d9e6;
    }

    .toggle-state:checked ~ .indicator {
        transform: translate3d(25%, 0, 0);
        background-color: #006400;
    }

    /* ==========================
           ESTILOS PARA OTRO MODAL (#modalEditarUsuario)
           ========================== */
    #modalEditarUsuario .modal-content {
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    }

    #modalEditarUsuario .modal-dialog {
        max-width: 75%;
        width: 100%;
        margin-right: 20%;
    }

    #modalEditarUsuario .modal-header {
        border-bottom: none;
        padding: 20px;
    }

    #modalEditarUsuario .modal-title {
        font-weight: bold;
        color: #343a40;
    }

    #modalEditarUsuario .modal-body {
        padding: 20px;
    }

    #modalEditarUsuario .modal-footer {
        border-top: none;
        padding: 20px;
    }

    .swal2-actions .btn {
        margin: 0 0.25rem; /* Ajusta el margen horizontal entre botones */
    }
</style>


<a href="/UsuariosCreate" title="" class="btn btn-lg box-shadow--4dp">Crear Registro</a>
<br />

<div class="container" style="margin-top:30px;">
    <table id="example" class="table table-striped table-bordered" style="width:100%">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Nombres)</th>
                <th>@Html.DisplayNameFor(model => model.Apellidos)</th>
                <th>@Html.DisplayNameFor(model => model.Telefono)</th>
                <th>@Html.DisplayNameFor(model => model.Direccion)</th>
                <th>Usuario</th>
                <th>@Html.DisplayNameFor(model => model.Estado)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Nombres)</td>
                    <td>@Html.DisplayFor(modelItem => item.Apellidos)</td>
                    <td>@Html.DisplayFor(modelItem => item.Telefono)</td>
                    <td>@Html.DisplayFor(modelItem => item.Direccion)</td>
                    <td>@Html.DisplayFor(modelItem => item.Usuario1)</td>
                    <td>@Html.DisplayFor(modelItem => item.Estado)</td>
                    <td>
                        <!-- Edit Button -->
                        <a class="btn launch btnEditar"
                           data-toggle="modal"
                           data-target="#modalEditarUsuario"
                           data-id="@item.IdUsuario"
                           data-nombres="@item.Nombres"
                           data-apellidos="@item.Apellidos"
                           data-direccion="@item.Direccion"
                           data-telefono="@item.Telefono"
                           data-usuario="@item.Usuario1"
                           data-clave="@item.Clave"
                           data-estado="@item.Estado">
                            <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                        </a>

            @*             <!-- Delete Button -->
                        <a class="btn launch" data-toggle="modal" data-target="#staticBackdrop-@item.IdUsuario">
                            <i class="fa fa-trash" aria-hidden="true"></i>
                        </a> *@

                        <button class="btn launch"
                                title="Eliminar usuario"
                                data-usuario-id="@item.IdUsuario"
                                data-usuario-nombre="@item.Nombres @item.Apellidos"
                                onClick="confirmDelete(this)">
                            <i class="fa fa-trash" aria-hidden="true"></i>
                        </button>


                    </td>
                </tr>





                <!-- Modal Eliminar Usuario -->
                @* <div class="modal fade" id="staticBackdrop-@item.IdUsuario" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-body">
                                <div class="text-right">
                                    <i class="fa fa-close close" data-dismiss="modal"></i>
                                </div>
                                <div class="px-4 py-5">
                                    <h5 class="text-uppercase">Usuario1</h5>
                                    <h4 class="mt-5 theme-color mb-5">Estás a punto de eliminar un elemento!</h4>
                                    <span class="theme-color">Record Summary</span>
                                    <div class="mb-3"><hr class="new1"></div>
                                    <div class="d-flex justify-content-between"><small>Nombres</small><small>@item.Nombres</small></div>
                                    <div class="d-flex justify-content-between"><small>Apellidos</small><small>@item.Apellidos</small></div>
                                    <div class="d-flex justify-content-between"><small>Teléfono</small><small>@item.Telefono</small></div>
                                    <div class="d-flex justify-content-between"><small>Dirección</small><small>@item.Direccion</small></div>
                                    <div class="d-flex justify-content-between"><small>Usuario</small><small>@item.Usuario1</small></div>
                                    <div class="form-group mt-3">
                                        <form method="POST" asp-action="Delete" asp-route-id="@item.IdUsuario" style="display:inline;">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-danger">Sí, quiero eliminar</button>
                                        </form>
                                        <button class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div> *@

                <!-- Modal Eliminar Usuario -->
               @*  <div class="modal fade delete-modal" id="staticBackdrop-@item.IdUsuario" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="confirmModalLabel-@item.IdUsuario" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">

                            <div class="modal-header">
                                <h5 class="modal-title" id="confirmModalLabel-@item.IdUsuario">Confirmar eliminación</h5>
                                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Cerrar"></button>
                            </div>

                            <div class="modal-body text-center">
                                <i class="fas fa-exclamation-triangle warning-icon"></i>
                                <p>¿Estás seguro que deseas eliminar a este usuario?<br>Esta acción no se puede deshacer.</p>

                                <div class="mb-3"><hr class="new1"></div>
                                <div class="d-flex justify-content-between"><small>Nombres</small><small>@item.Nombres</small></div>
                                <div class="d-flex justify-content-between"><small>Apellidos</small><small>@item.Apellidos</small></div>
                                <div class="d-flex justify-content-between"><small>Teléfono</small><small>@item.Telefono</small></div>
                                <div class="d-flex justify-content-between"><small>Dirección</small><small>@item.Direccion</small></div>
                                <div class="d-flex justify-content-between"><small>Usuario</small><small>@item.Usuario1</small></div>
                            </div>

                            <div class="modal-footer">
                                <form method="POST" asp-action="Delete" asp-route-id="@item.IdUsuario" style="display:inline;">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-danger">
                                        <i class="fas fa-trash-alt me-2"></i>Eliminar
                                    </button>
                                </form>
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">
                                    <i class="fas fa-times me-2"></i>Cancelar
                                </button>
                            </div>

                        </div>
                    </div>
                </div> *@

            }
        </tbody>
    </table>
</div>

<!-- MODAL DE EDICIÓN ÚNICO PARA TODOS -->
<!-- MODAL DE EDICIÓN ÚNICO PARA TODOS -->
<div class="modal fade" id="modalEditarUsuario" tabindex="-1" aria-labelledby="modalUsuarioLabel" aria-hidden="true">
    <div class="modal-dialog" style="max-width: 750px; width: 90vw;">
        <div class="modal-content">
            <form id="formEditarUsuario" class="form">
                @Html.AntiForgeryToken()
                       <div class="modal-header">
                    <h5 class="modal-title">Editar - <span id="modalUsuarioNombre"></span></h5>
                    <button type="button" class="btn-close" data-dismiss="modal"></button>
                </div>
                <div class="modal-body">

                    <input type="hidden" id="EditUsuarioId" name="IdUsuario" />

                    <div class="form-group row">
                        <div class="col-lg-5 mb-3">
                            <label>Nombres</label>
                            <input id="EditNombres" name="Nombres" class="form-control" />
                        </div>
                        <div class="col-lg-5 mb-3">
                            <label>Apellidos</label>
                            <input id="EditApellidos" name="Apellidos" class="form-control" />
                        </div>
                        <div class="col-lg-6 mb-3">
                            <label>Dirección</label>
                            <input id="EditDireccion" name="Direccion" class="form-control" />
                        </div>
                        <div class="col-lg-5 mb-3">
                            <label>Teléfono</label>
                            <input id="EditTelefono" name="Telefono" class="form-control" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-lg-4 mb-3">
                            <label>Usuario</label>
                            <input id="EditUsuario1" name="Usuario1" class="form-control" />
                        </div>
                        <div class="col-lg-4 mb-3">
                            <label>Contraseña</label>
                            <input id="EditClave" name="Clave" class="form-control" />
                        </div>
                    </div>

                    <!-- TOGGLE DE ESTADO -->
                    <label class="label">
                        <div class="toggle">
                            <input class="toggle-state" id="estadoCheck" name="Estado" type="checkbox" />
                            <div class="indicator"></div>
                        </div>
                        <div class="label-text" id="estadoLabel">No activo</div>
                    </label>

                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Guardar</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                </div>
            </form>
        </div>
    </div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="/theme-assets/js/Datatable.js"></script>

    <!-- Añadir esta línea en tu layout si aún no la tienes -->


    <script>
        const estadoCheck = document.getElementById("estadoCheck");
        const estadoLabel = document.getElementById("estadoLabel");
        const toggleContainer = document.querySelector(".toggle");

        // Cuando haces clic en editar
        $(document).on('click', '.btnEditar', function () {
            var btn = $(this);
            $("#EditUsuarioId").val(btn.data("id"));
            $("#EditNombres").val(btn.data("nombres"));
            $("#EditApellidos").val(btn.data("apellidos"));
            $("#EditDireccion").val(btn.data("direccion"));
            $("#EditTelefono").val(btn.data("telefono"));
            $("#EditUsuario1").val(btn.data("usuario"));
            $("#EditClave").val(btn.data("clave"));
            $("#modalUsuarioNombre").text(btn.data("usuario"));

            var estado = btn.data("estado");

            // Asignamos el estado al checkbox
            const isActive = estado === true || estado === "True" || estado === "true" || estado == 1;
            $("#estadoCheck").prop("checked", isActive);

            // Ahora actualizamos inmediatamente la presentación del label y el fondo
            if (isActive) {
                estadoLabel.textContent = "Activo";
                estadoLabel.style.color = "#006400"; // Verde
            } else {
                estadoLabel.textContent = "No activo";
                estadoLabel.style.color = "#394a56"; // Gris estándar
                toggleContainer.style.backgroundColor = "#ecf0f3"; // Fondo estándar
            }
        });

        // Cuando haces click en el checkbox para cambiar estado
        estadoCheck.addEventListener("change", function () {
            if (estadoCheck.checked) {
                estadoLabel.textContent = "Activo";
                estadoLabel.style.color = "#006400"; // Verde
            } else {
                estadoLabel.textContent = "No activo";
                estadoLabel.style.color = "#394a56"; // Gris estándar
                toggleContainer.style.backgroundColor = "#ecf0f3"; // Fondo estándar
            }
        });


        $(document).on('submit', '#formEditarUsuario', async function (e) {
            e.preventDefault();

            const usuarioData = {
                IdUsuario: $("#EditUsuarioId").val(),
                Nombres: $("#EditNombres").val(),
                Apellidos: $("#EditApellidos").val(),
                Telefono: $("#EditTelefono").val(),
                Direccion: $("#EditDireccion").val(),
                Usuario1: $("#EditUsuario1").val(),
                Clave: $("#EditClave").val(),
                Estado: $("#estadoCheck").is(":checked") // True o False
            };
            try {
                const response = await fetch("/Usuarios/Edit", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    body: JSON.stringify(usuarioData)
                });

                const result = await response.json();

                if (response.ok && result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Usuario actualizado',
                        text: result.message,
                        confirmButtonText: 'OK'
                    }).then(() => {
                        $("#modalEditarUsuario").modal('hide');
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: result.message || 'Hubo un error al actualizar',
                        confirmButtonText: 'OK'
                    });
                }
            } catch (error) {
                console.error(error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error de comunicación',
                    text: 'Hubo un error al conectar con el servidor',
                    confirmButtonText: 'OK'
                });
            }
        });

        function confirmDelete(button) {
            const userId = button.getAttribute('data-usuario-id');
            const userName = button.getAttribute('data-usuario-nombre');
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: "btn btn-success",
                    cancelButton: "btn btn-danger"
                },
                buttonsStyling: false
            });

            swalWithBootstrapButtons.fire({
                title: "¿Estás seguro?",
                text: `Estás a punto de eliminar al usuario "${userName}". ¡Esta acción no se puede deshacer!`,
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Sí, eliminar",
                cancelButtonText: "No, cancelar",
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    // Crear y enviar formulario para eliminar
                    const form = document.createElement("form");
                    form.method = "POST";
                    form.action = `/Usuarios/Delete/${userId}`;

                    const antiForgeryInput = document.createElement("input");
                    antiForgeryInput.type = "hidden";
                    antiForgeryInput.name = "__RequestVerificationToken";
                    antiForgeryInput.value = token;

                    form.appendChild(antiForgeryInput);
                    document.body.appendChild(form);
                    form.submit();
                } else if (result.dismiss === Swal.DismissReason.cancel) {
                    swalWithBootstrapButtons.fire({
                        title: "Cancelado",
                        text: "La eliminación no se realizó.",
                        icon: "error"
                    });
                }
            });
        }
    </script>

}
